# Expensive change 2.1.15

_ 2 1 4 5 3 6 8 7 0 9
_ 0 1 2 3 4 5 6 7 8 9

compare is cheap, but moving is expensive.

Idea: put the i th at the spare place and select the smallest, out it at i
> Use selection sort because it minimizes the number of exchanges

for (i = 0; i < n ; i++)
    if (extra.isempty){
        select the smallest one among a[i~n-1]: j
        basic(i, j, a);
    }
    else{
        find the empty location e;
        select the smallest one among a[i~n-1] plus extra: j
        basic2(i, j, e, a);
    }
end

function basic(i, j, a){ // extra place is empty
    put a[i] to the extra place;
    put a[j] at i th place;
}

function basic(i, j, a){
    put a[i] to e
    put a[j] to the ith place
}